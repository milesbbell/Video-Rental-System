/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VRS;

import java.sql.*;
import Connection.ConnectionProvider;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author skyli
 */
public class NewMovie extends javax.swing.JFrame {

    /**
     * Creates new form NewMovie
     */
    public NewMovie() {
        initComponents();
        autoID();   
        
    }
    PreparedStatement pst;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        MovieText = new javax.swing.JTextField();
        TitleText = new javax.swing.JTextField();
        GenreText = new javax.swing.JTextField();
        DirectorText = new javax.swing.JTextField();
        RatingText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        avail = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("MovieID");

        jLabel2.setText("Title");

        jLabel3.setText("Genre");

        jLabel4.setText("Director");

        jLabel5.setText("Rating");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Edit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Available");

        avail.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(10, 10, 10)))
                    .addComponent(jLabel6))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(MovieText)
                    .addComponent(TitleText)
                    .addComponent(GenreText)
                    .addComponent(DirectorText)
                    .addComponent(RatingText, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addComponent(avail, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(MovieText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TitleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(GenreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(DirectorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(RatingText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(avail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addGap(22, 22, 22))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*public void tableUpdate() {
        int c;
            try {
                Connection con=ConnectionProvider.getCon();
                pst = con.prepareStatement("select * from movies");
                ResultSet Rs = pst.executeQuery();

                ResultSetMetaData rd = Rs.getMetaData();
                c = rd.getColumnCount();
                DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
                df.setRowCount(0);
                
                while(Rs.next())
                {
                    Vector v2 = new Vector();
                    
                    for(int i=1; i<=c; i++)
                    {
                        v2.add(Rs.getString("movieID"));
                        v2.add(Rs.getString("title"));
                        v2.add(Rs.getString("genre"));
                        v2.add(Rs.getString("director"));
                        v2.add(Rs.getString("rating"));
                        v2.add(Rs.getString("availabe"));
                    }
                    df.addRow(v2);
                }
                } catch (Exception e) {
            }
        
    }
    */
    public void autoID() {
        {                                         
        // TODO add your handling code here:
        try {
            Connection con=ConnectionProvider.getCon();
            Statement st=con.createStatement();
            String query="select * from movies";
            st.executeQuery(query);
            ResultSet rs= st.executeQuery(query);
            ResultSetMetaData rsmd=rs.getMetaData();
            DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
            
            int cols=rsmd.getColumnCount();
            String[] colName=new String[cols];
            for(int i=0;i<cols;i++)
                colName[i]=rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);
            String movieID,title,genre,director,rating,available;
            while(rs.next()) {
                movieID=rs.getString(1);
                title=rs.getString(2);
                genre=rs.getString(3);
                director=rs.getString(4);
                rating=rs.getString(5);
                available=rs.getString(6);
                String[] row={movieID,title,genre,director,rating,available};
                model.addRow(row);        
        }
        st.close();
        con.close();
        } catch (Exception e) {
        }
        
        
    }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Homepage().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String id=MovieText.getText();
        String Title=TitleText.getText();
        String Genre=GenreText.getText();
        String Director=DirectorText.getText();
        String Rating=RatingText.getText();
        String Available =avail.getSelectedItem().toString();
        try {
            Connection con=ConnectionProvider.getCon();
            pst = con.prepareStatement("insert into movies (id,Title,Genre,Director,Rating,Available) values(?,?,?,?,?,?)");
            pst.setString(1,id);
            pst.setString(2,Title);
            pst.setString(3,Genre);
            pst.setString(4,Director);
            pst.setString(5,Rating);
            pst.setString(6,Available);
            pst.executeUpdate();
            //Statement st=con.createStatement();
            //st.executeUpdate("insert into movies values('"+movieID+"','"+title+"','"+genre+"','"+director+"','"+rating+"','"+available+"')");
            JOptionPane.showMessageDialog(null,"Successfully updated");
            
            MovieText.setText(" ");
            TitleText.setText(" ");
            GenreText.setText(" ");
            DirectorText.setText(" ");
            RatingText.setText(" ");
            setVisible(false);
            new NewMovie().setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Input Error");
            setVisible(false);
            new NewMovie().setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String id=MovieText.getText();
        String Title=TitleText.getText();
        String Genre=GenreText.getText();
        String Director=DirectorText.getText();
        String Rating=RatingText.getText();
        String Available =avail.getSelectedItem().toString();
        try {
            Connection con=ConnectionProvider.getCon();
            pst = con.prepareStatement("update movies set Title=?,Genre=?,Director=?,Rating=?,Available=? where id=?");
            pst.setString(6,id);
            pst.setString(1,Title);
            pst.setString(2,Genre);
            pst.setString(3,Director);
            pst.setString(4,Rating);
            pst.setString(5,Available);
            pst.executeUpdate();
            //Statement st=con.createStatement();
            //st.executeUpdate("insert into movies values('"+movieID+"','"+title+"','"+genre+"','"+director+"','"+rating+"','"+available+"')");
            JOptionPane.showMessageDialog(null,"Successfully updated");
            
            MovieText.setText(" ");
            TitleText.setText(" ");
            GenreText.setText(" ");
            DirectorText.setText(" ");
            RatingText.setText(" ");
            setVisible(false);
            new NewMovie().setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Input Error");
            setVisible(false);
            new NewMovie().setVisible(true);
        }        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel d1 = (DefaultTableModel)jTable1.getModel();
        
        int selectIndex = jTable1.getSelectedRow();
        
        MovieText.setText(d1.getValueAt(selectIndex, 0).toString());
        TitleText.setText(d1.getValueAt(selectIndex, 1).toString());
        GenreText.setText(d1.getValueAt(selectIndex, 2).toString());
        DirectorText.setText(d1.getValueAt(selectIndex, 3).toString());
        RatingText.setText(d1.getValueAt(selectIndex, 4).toString());
        avail.setSelectedItem(d1.getValueAt(selectIndex, 5).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(this,"Do you want to delete this record?","Warning",JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION)
        {
            String id=MovieText.getText();
        try {
            Connection con=ConnectionProvider.getCon();
            pst = con.prepareStatement("delete from movies where id=?");
            pst.setString(1,id);
            pst.executeUpdate();
            //Statement st=con.createStatement();
            //st.executeUpdate("insert into movies values('"+movieID+"','"+title+"','"+genre+"','"+director+"','"+rating+"','"+available+"')");
            JOptionPane.showMessageDialog(null,"Deleted");
            
            setVisible(false);
            new NewMovie().setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Input Error");
            setVisible(false);
            new NewMovie().setVisible(true);
        }        
        }
        else{
            
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMovie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DirectorText;
    private javax.swing.JTextField GenreText;
    private javax.swing.JTextField MovieText;
    private javax.swing.JTextField RatingText;
    private javax.swing.JTextField TitleText;
    private javax.swing.JComboBox<String> avail;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
